<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_Tc32QDpIEeiWZ5F-kAWNPQ" name="YangBuildInTypes" URI="">
  <packageImport xmi:type="uml:PackageImport" xmi:id="_Tjs3ADpIEeiWZ5F-kAWNPQ">
    <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
  </packageImport>
  <packagedElement xmi:type="uml:Package" xmi:id="_15DWkDpIEeiWZ5F-kAWNPQ" name="TypeDefinitions">
    <packagedElement xmi:type="uml:DataType" xmi:id="ybit:binary" name="ybit:binary">
      <ownedComment xmi:type="uml:Comment" xmi:id="comment-binary">
        <body>The 'binary' built-in type represents any binary data, i.e., a sequence of octets.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="property-binary" name="binary">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:DataType" xmi:id="ybit:bits" name="ybit:bits">
      <ownedComment xmi:type="uml:Comment" xmi:id="comment-bits">
        <body>The 'bits' built-in type represents a bit set.  That is, a bits value is a set of flags identified by small integer position numbers starting at 0. 
Each bit number has an assigned name.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="property-bits" name="bits">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:DataType" xmi:id="ybit:boolean" name="ybit:boolean">
      <ownedComment xmi:type="uml:Comment" xmi:id="comment-boolean">
        <body>The 'boolean' built-in type represents a boolean value.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="property-boolean" name="boolean">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:DataType" xmi:id="ybit:decimal64" name="ybit:decimal64">
      <ownedComment xmi:type="uml:Comment" xmi:id="comment-decimal64">
        <body>The 'decimal64' built-in type represents a subset of the real numbers, which can be represented by decimal numerals. 
The value space of decimal64 is the set of numbers that can be obtained by multiplying a 64-bit signed integer 
by a negative power of ten, i.e., expressible as &quot;i x 10^-n&quot; where i is an integer64 and n is an integer between 1 and 18, inclusively.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="property-decimal64" name="decimal64">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:DataType" xmi:id="ybit:empty" name="ybit:empty">
      <ownedComment xmi:type="uml:Comment" xmi:id="comment-empty">
        <body>The 'empty' built-in type represents a leaf that does not have any value, it conveys information by its presence or absence.  
An empty type cannot have a default value.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="property-empty" name="empty">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:DataType" xmi:id="ybit:enumeration" name="ybit:enumeration">
      <ownedComment xmi:type="uml:Comment" xmi:id="comment-enumeration">
        <body>The 'enumeration' built-in type represents values from a set of assigned names.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="property-enumeration" name="enumeration">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:DataType" xmi:id="ybit:identityref" name="ybit:identityref">
      <ownedComment xmi:type="uml:Comment" xmi:id="comment-identityref">
        <body>The 'identityref' build-in type is used to reference an existing identity.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="property-identityref" name="identityref">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:DataType" xmi:id="ybit:instance-identifier" name="ybit:instance-identifier">
      <ownedComment xmi:type="uml:Comment" xmi:id="comment-instance-identifier">
        <body>The 'instance-identifier' built-in type is used to uniquely identify a
particular instance node in the data tree.

The syntax for an instance-identifier is a subset of the XPath
abbreviated syntax, formally defined by the rule
&quot;instance-identifier&quot; in Section 12. It is used to uniquely identify
a node in the data tree. Predicates are used only for specifying the
values for the key nodes for list entries, a value of a leaf-list
entry, or a positional index for a list without keys. For
identifying list entries with keys, each predicate consists of one
equality test per key, and each key MUST have a corresponding
predicate.

If the leaf with the instance-identifier type represents
configuration data, and the &quot;require-instance&quot; property
(Section 9.13.2) is &quot;true&quot;, the node it refers to MUST also represent
configuration. Such a leaf puts a constraint on valid data. All
such leaf nodes MUST reference existing nodes or leaf nodes with
their default value in use (see Section 7.6.1) for the data to be
valid. This constraint is enforced according to the rules in
Section 8.

The &quot;instance-identifier&quot; XPath expression is conceptually evaluated
in the following context, in addition to the definition in
Section 6.4.1:</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="property-instance-identifier" name="instance-identifier">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:DataType" xmi:id="ybit:int8" name="ybit:int8">
      <ownedComment xmi:type="uml:Comment" xmi:id="comment-int8">
        <body>The yang build-in type 'int8' represents integer values between -128 and 127, inclusively.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="property-int8" name="int8" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:DataType" xmi:id="ybit:int16" name="ybit:int16">
      <ownedComment xmi:type="uml:Comment" xmi:id="comment-int16">
        <body>The yang build-in type 'int16' represents integer values between -32768 and 32767, inclusively.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="property-int16" name="int16">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:DataType" xmi:id="ybit:int32" name="ybit:int32">
      <ownedComment xmi:type="uml:Comment" xmi:id="comment-int32">
        <body>The yang build-in type 'int32' represents integer values between -2147483648 and 2147483647, inclusively.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="property-int32" name="int32">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:DataType" xmi:id="ybit:int64" name="ybit:int64">
      <ownedComment xmi:type="uml:Comment" xmi:id="comment-int64">
        <body>The yang build-in type 'int64' represents integer values between -9223372036854775808 and 9223372036854775807, inclusively.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="property-int64" name="int64">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:DataType" xmi:id="ybit:leafref" name="ybit:leafref">
      <ownedComment xmi:type="uml:Comment" xmi:id="comment-leafref">
        <body>The 'leafref' build-in type is used to reference a particular leaf instance in   the data tree.  
The &quot;path&quot; substatement (Section 9.9.2) selects a set   of leaf instances, and the leafref value space is the set of values 
of these leaf instances.
If the leaf with the leafref type represents configuration data, the   leaf it refers to MUST also represent configuration.  
Such a leaf   puts a constraint on valid data.  All leafref nodes MUST reference   existing leaf instances or leafs with 
default values in use (see   Section 7.6.1) for the data to be valid.  This constraint is enforced   according to the rules in Section 8.
There MUST NOT be any circular chains of leafrefs.
If the leaf that the leafref refers to is conditional based on one or   more features (see Section 7.18.2), then the leaf 
with the leafref   type MUST also be conditional based on at least the same set of   features.
</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="property-leafref" name="leafref">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:DataType" xmi:id="ybit:string" name="ybit:string">
      <ownedComment xmi:type="uml:Comment" xmi:id="comment-string">
        <body>The 'string' built-in type represents human-readable strings in YANG.
   Legal characters are tab, carriage return, line feed, and the legal
   characters of Unicode and ISO/IEC 10646 [ISO.10646]:

     ;; any Unicode character, excluding the surrogate blocks,
     ;; FFFE, and FFFF.
     string = *char
     char = %x9 / %xA / %xD / %x20-D7FF / %xE000-FFFD /
            %x10000-10FFFF
</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="property-string" name="string">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:DataType" xmi:id="ybit:uint8" name="ybit:uint8">
      <ownedComment xmi:type="uml:Comment" xmi:id="comment-uint8">
        <body>The yang build-in type 'uint8' represents integer values between 0 and 255, inclusively.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="property-uint8" name="uint8">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:DataType" xmi:id="ybit:uint16" name="ybit:uint16">
      <ownedComment xmi:type="uml:Comment" xmi:id="comment-uint16">
        <body>The yang build-in type 'uint16' represents integer values between 0 and 65535, inclusively.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="property-uint16" name="uint16">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:DataType" xmi:id="ybit:uint32" name="ybit:uint32">
      <ownedComment xmi:type="uml:Comment" xmi:id="comment-uint32">
        <body>The yang build-in type 'uint32' represents integer values between 0 and 4294967295, inclusively.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="property-uint32" name="uint32">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:DataType" xmi:id="ybit:uint64" name="ybit:uint64">
      <ownedComment xmi:type="uml:Comment" xmi:id="comment-uint64">
        <body>The yang build-in type 'uint64' represents integer values between 0 and 18446744073709551615, inclusively.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="property-uint64" name="uint64">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:DataType" xmi:id="ybit:union" name="ybit:union">
      <ownedComment xmi:type="uml:Comment" xmi:id="comment-union">
        <body>The 'union' built-in type represents a value that corresponds to one of
its member types.

When the type is &quot;union&quot;, the &quot;type&quot; statement (Section 7.4) MUST be
present.  It is used to repeatedly specify each member type of the
union.  It takes as an argument a string that is the name of a member
type.

A member type can be of any built-in or derived type, except it MUST
NOT be one of the built-in types &quot;empty&quot; or &quot;leafref&quot;.

When a string representing a union data type is validated, the string
is validated against each member type, in the order they are
specified in the &quot;type&quot; statement, until a match is found.

Any default value or &quot;units&quot; property defined in the member types is
not inherited by the union type.

Example:
  type union {    type int32;    type enumeration {      enum &quot;unbounded&quot;;    }  }
</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="property-union" name="union">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Package" xmi:id="_OCbKUDpJEeiWZ5F-kAWNPQ" name="ClassDiagrams"/>
  <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_ZMrA8DpkEeiV8s5BDGUvrA">
    <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_ZMs2IDpkEeiV8s5BDGUvrA" source="PapyrusVersion">
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_ZMs2ITpkEeiV8s5BDGUvrA" key="Version" value="0.0.8"/>
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_ZMs2IjpkEeiV8s5BDGUvrA" key="Comment" value="ProfileLifecycle Profile v0.0.4 applied."/>
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_ZMs2IzpkEeiV8s5BDGUvrA" key="Copyright" value=""/>
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_ZMs2JDpkEeiV8s5BDGUvrA" key="Date" value="2017-08-16"/>
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_ZMs2JTpkEeiV8s5BDGUvrA" key="Author" value=""/>
    </eAnnotations>
    <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_ZMroADpkEeiV8s5BDGUvrA" source="http://www.eclipse.org/uml2/2.0.0/UML">
      <references xmi:type="ecore:EPackage" href="UmlProfiles/OpenInterfaceModelProfile/OpenInterfaceModel_Profile.profile.uml#_jdlJkIJYEee3epvelL_xvA"/>
    </eAnnotations>
    <appliedProfile xmi:type="uml:Profile" href="UmlProfiles/OpenInterfaceModelProfile/OpenInterfaceModel_Profile.profile.uml#_UbM6ILbyEeaufdfMFhfy_A"/>
  </profileApplication>
  <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_ZMs2JjpkEeiV8s5BDGUvrA">
    <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_ZMurUDpkEeiV8s5BDGUvrA" source="PapyrusVersion">
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_ZMurUTpkEeiV8s5BDGUvrA" key="Version" value="0.2.13"/>
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_ZMurUjpkEeiV8s5BDGUvrA" key="Comment" value="ProfileLifecycle Profile v0.0.4 applied."/>
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_ZMurUzpkEeiV8s5BDGUvrA" key="Copyright" value=""/>
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_ZMurVDpkEeiV8s5BDGUvrA" key="Date" value="2017-08-16"/>
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_ZMurVTpkEeiV8s5BDGUvrA" key="Author" value=""/>
    </eAnnotations>
    <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_ZMtdMDpkEeiV8s5BDGUvrA" source="http://www.eclipse.org/uml2/2.0.0/UML">
      <references xmi:type="ecore:EPackage" href="UmlProfiles/OpenModelProfile/OpenModel_Profile.profile.uml#_JpVIYIJYEee3epvelL_xvA"/>
    </eAnnotations>
    <appliedProfile xmi:type="uml:Profile" href="UmlProfiles/OpenModelProfile/OpenModel_Profile.profile.uml#_m1xqsHBgEd6FKu9XX1078A"/>
  </profileApplication>
  <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_ZMvSYDpkEeiV8s5BDGUvrA">
    <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_ZMv5cDpkEeiV8s5BDGUvrA" source="PapyrusVersion">
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_ZMv5cTpkEeiV8s5BDGUvrA" key="Version" value="0.0.4"/>
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_ZMv5cjpkEeiV8s5BDGUvrA" key="Comment" value="Metaclasses Property and Stereotype added via &lt;Element Import>."/>
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_ZMv5czpkEeiV8s5BDGUvrA" key="Copyright" value=""/>
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_ZMv5dDpkEeiV8s5BDGUvrA" key="Date" value="2017-08-08"/>
      <details xmi:type="ecore:EStringToStringMapEntry" xmi:id="_ZMv5dTpkEeiV8s5BDGUvrA" key="Author" value=""/>
    </eAnnotations>
    <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_ZMvSYTpkEeiV8s5BDGUvrA" source="http://www.eclipse.org/uml2/2.0.0/UML">
      <references xmi:type="ecore:EPackage" href="UmlProfiles/ProfileLifecycleProfile/ProfileLifecycle_Profile.profile.uml#_AL3HsHweEee8oZaf2rRQlg"/>
    </eAnnotations>
    <appliedProfile xmi:type="uml:Profile" href="UmlProfiles/ProfileLifecycleProfile/ProfileLifecycle_Profile.profile.uml#_CBpGoEdZEearpawF38eisA"/>
  </profileApplication>
  <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_zgh94DvmEeiOaf-P7ZpOZQ">
    <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_zgkaIDvmEeiOaf-P7ZpOZQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
      <references xmi:type="ecore:EPackage" href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#_Kv8EIKFXEeS_KNX0nfvIVQ"/>
    </eAnnotations>
    <appliedProfile xmi:type="uml:Profile" href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#ActionLanguage"/>
  </profileApplication>
</uml:Model>
